AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Pictorialdiary Backend Application for development
Parameters:
  DeployType:
    Type: String
    AllowedValues:
    - dev
    - stag
    - prod
    Default: dev
    Description: Deploy Type
  DBMasterUsername:
    Type: String
    Description: The master username for the database.
  DBMasterPassword:
    Type: String
    NoEcho: true
    Description: The master password for the database.
  VpcId:
    Type: String
    Description: The ID of VPC.
Resources:
  UserApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        openapi: 3.0.0
        info:
          version: 1.0.0
        paths:
          /users/register:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RegisterUserFunction.Arn}/invocations
          /users/confirm:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ConfirmUserFunction.Arn}/invocations
          /users/login:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LoginUserFunction.Arn}/invocations
          /users/logout:
            post:
              x-amazon-apigateway-integration:
                httpMethod: GET
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LogOutUserFunction.Arn}/invocations
  PhotoApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      BinaryMediaTypes:
      - image~1*
      DefinitionBody:
        openapi: 3.0.0
        info:
          version: 1.0.0
        paths:
          /photos:
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PhotoUploadFunction.Arn}/invocations
  RegisterUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: RegisterUserFunction
      Handler: main.go
      Runtime: go1.x
      Events:
        RegisterUser:
          Type: Api
          Properties:
            Path: /users/register
            Method: post
    Metadata:
      SamResourceId: RegisterUserFunction
  ConfirmUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ConfirmUserFunction
      Handler: main.go
      Runtime: go1.x
      Events:
        ConfirmUser:
          Type: Api
          Properties:
            Path: /users/confirm
            Method: post
    Metadata:
      SamResourceId: ConfirmUserFunction
  LoginUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: LoginUserFunction
      Handler: main.go
      Runtime: go1.x
      Events:
        ConfirmUser:
          Type: Api
          Properties:
            Path: /users/login
            Method: post
    Metadata:
      SamResourceId: LoginUserFunction
  LogOutUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: LogOutUserFunction
      Handler: main.go
      Runtime: go1.x
      Events:
        ConfirmUser:
          Type: Api
          Properties:
            Path: /users/logout
            Method: get
    Metadata:
      SamResourceId: LogOutUserFunction
  PhotoUploadFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: PhotoUploadFunction
      Handler: main.go
      Runtime: go1.x
      Events:
        PhotoUpload:
          Type: Api
          Properties:
            Path: /photos
            Method: post
    Metadata:
      SamResourceId: PhotoUploadFunction
  DynamoStack:
    Type: AWS::Serverless::Application
    Properties:
      Location: DynamoStack/template.yaml
      Parameters:
        DeployType:
          Ref: DeployType
    Metadata:
      SamResourceId: DynamoStack
  S3Stack:
    Type: AWS::Serverless::Application
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      Location: S3Stack/template.yaml
      Parameters:
        DeployType:
          Ref: DeployType
    Metadata:
      SamResourceId: S3Stack
  AuroraStack:
    Type: AWS::Serverless::Application
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      Location: AuroraStack/template.yaml
      Parameters:
        DeployType:
          Ref: DeployType
        DBMasterUsername:
          Ref: DBMasterUsername
        DBMasterPassword:
          Ref: DBMasterPassword
        VpcId:
          Ref: VpcId
    Metadata:
      SamResourceId: AuroraStack
